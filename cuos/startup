--[[
Boots the OS by loading the most important functions. These include:

 - Loading all the core OS APIs
 - Setting up devices, and running the hotplugging service
 - Running the /init script
 - Dropping into the scheduler
--]]

-- Get rid of the CraftOS message
shell.run('clear')
term.setTextColor(colors.yellow)
print("C omputercraft")
print("U nified")
print("O perating")
print("S ystem")
term.setTextColor(colors.white)

-- We have to load the cuos module via os.loadAPI, since everybody must have it
-- to avoid having to bootstrap the `cuos.import` function themselves.
os.loadAPI("/lib/cuos")
cuos.import('func')
cuos.import('hotplug')
cuos.import('naming')

-- The shell API doesn't, by default, exist inside of APIs which are loaded,
-- so we need to account for that and smuggle the shell environment inside
func.foreach(
    function(key, value)
        cuos.shell[key] = value
    end,
    shell)

-- Load up all the devices
print(">>> Loading devices")
hotplug.load_devices()
hotplug.start()

-- Start the naming service
print(">>> Launching naming service")
naming.start()

-- Loads the init script - note that this has to be a stub, since the
-- scheduler is not active yet
local function init_stub()
    print(">>> Loading init")
    shell.run('/init')
end

print(">>> Registering stub for init")
cuos.daemon(init_stub)

cuos.scheduler()

-- If everybody is dead, then go ahead and shut the machine off
os.shutdown()
